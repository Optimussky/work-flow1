# Archivo para guardar el seguimiento y posibles configuraciones.

# 		CREACIÓN DE RAMAS
## GARANTIZAR QUE ME ENCUENTRO EN LA RAMA main o princiipal
	git checkout main

## CREAR RAMA "html-feature"
	git checkout -b html-feature

## REGRESAR A RAMA PRINCIPAL
	git checkout main

## CREAR RAMA "app-js-feature"
	git checkout -b app-js-feature

## REGRESAR A RAMA PRINCIPAL
	git checkout main

## CREAR RAMA "app-js-feature"
	git checkout -b app-js-feature

## REGRESAR A RAMA PRINCIPAL
	git checkout main

## CREAR RAMA "app-js-feature"
	git checkout -b styles-css-feature

## REGRESAR A RAMA PRINCIPAL
	git checkout main

## CREAR RAMA "app-js-feature"
	git checkout -b file-configure-feature

###			SUBIR LOS PRIMEROS CAMBIOS DE file-configure-feature
### Cambiar a la rama "file-configure-feature" para subir el primer commit

## Para subir los cambios desde file-configure-feature es necesario usar el comando

	git status
	git commit -m "first commit"
	git push

## En caso de no poderse realizar el siguiente comando y volver a 
## Ejecutar los 3 pasos anteriores:
	git push --set-upstream origin file-configure-feature

## Unir las ramas desde la rama principal:
# Garantizar que estoy en la rama principal:

	git checkout main
	git merge html-feature
	git checkout main
	git merge file-configure-feature
	git checkout main
	git merge styles-css-feature
	git checkout main
	git merge app-js-feature
	git checkout main

	# hacer push de las ramas, cuando ya se hayan hecho las pruebas previas
	git push origin main

## CREAR Y BORRAR UNA RAMA, Asumiendo que estamos en la rama principal
	git branch -b nombre-nueva-rama
	git branch -D nombre-rama-a-borrar


### Cómo borrar una branch de Git en ambos repositorios: local y remoto
	
	https://www.freecodecamp.org/espanol/news/como-borrar-una-branch-de-git-en-ambos-repositorios-local-y-remoto/
